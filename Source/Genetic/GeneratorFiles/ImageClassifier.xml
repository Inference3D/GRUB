<?xml version="1.0" ?>

<class base="InstanceEngine">

<namespace>NVL_App</namespace>
<solution>GeneticLib</solution>
<name>ImageClassifier</name>
<description>An instance of an image classifier</description>

<includes>
    <include name="iostream" namespace="std" local="false" />
    <include name="opencv2/opencv.hpp" namespace="cv" local="false" />
    <include name="../Tools/ImageLoader.h" local="true" />
    <include name="InstanceEngineBase.h" local="true" />
    <include name="Solution.h" local="true" />
    <include name="GeneratorBase.h" local="true" />
</includes>

<variables>
    <variable type="ImageLoader *" name="_loader" code="00" />
</variables>

<constructors>

    <!-- Main Constructor -->
    <constructor type="custom" inline="false">
         <parameter type="ImageLoader *" name="loader" description="Defines an image loader for the system" />
    </constructor>

</constructors>

<methods>

    <!-- Determine the "error" for a given image -->
    <method section="Evaluation" modifiers="virtual" access="public" return="Vec2d" name="GetError" description="Retrieve the error for the given solution" inline="false">
        <parameter type="Solution *" name="solution" description="The solution that we are testing" />
    </method>    

    <!-- Determine the representation for the variable -->
    <method section="String Representation" modifiers="virtual" access="public" return="string" name="ToString" description="Retrieve a string representation" inline="false">
        <parameter type="Solution *" name="" description="" />
    </method>    

    <!-- The logic to generate a new solution -->
    <method section="Generate" modifiers="virtual" access="public" return="Solution *" name="Create" description="Generate new solutions" inline="false">
        <parameter type="GeneratorBase *" name="generator" description="A source of random numbers" />
    </method>

    <!-- Mutate a solution so that it is still a valid solution -->
    <method section="Mutate" modifiers="virtual" access="public" return="void" name="Mutate" description="Mutate solutions" inline="false">
        <parameter type="GeneratorBase *" name="generator" description="A source of random numbers" />
        <parameter type="Solution *" name="solution" description="The solution that is potentially mutate" />
        <parameter type="double" name="probably" description="The probably that the solution will be mutated" />
    </method>    

</methods>

<tests>
    <test name="evaluation_test" description="Confirm that evaluation is working correctly" exception="false" />
    <test name="string_representation" description="Confirm that the representation is correct" exception="false" />
    <test name="solution_generation" description="Confirm the solution generation logic" exception="false" />
</tests> 

</class>